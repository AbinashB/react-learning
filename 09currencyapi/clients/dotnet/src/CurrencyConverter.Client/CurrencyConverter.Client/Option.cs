// <auto-generated>
/*
 * Currency Converter API
 *
 * A simple REST API built with Kotlin and Spring Boot that provides currency conversion rates.  ## Features - Get conversion rates for a specific base currency - Returns rates in the format: `{currencycode: {inr: 1, cny: 2, etc}}` - Support for major currencies (USD, EUR, GBP, INR, JPY, CNY, CAD, AUD, CHF, SGD, KRW) - Health check endpoint - List supported currencies  ## Note This API uses mock exchange rates for demonstration purposes. In a production environment, you would integrate with a real currency exchange rate API like Fixer.io, CurrencyLayer, or similar services.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@example.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable


namespace CurrencyConverter.Client.CurrencyConverter.Client
{
    /// <summary>
    /// A wrapper for operation parameters which are not required
    /// </summary>
    public struct Option<TType>
    {
        /// <summary>
        /// The value to send to the server
        /// </summary>
        public TType Value { get; }

        /// <summary>
        /// When true the value will be sent to the server
        /// </summary>
        internal bool IsSet { get; }

        /// <summary>
        /// A wrapper for operation parameters which are not required
        /// </summary>
        /// <param name="value"></param>
        public Option(TType value)
        {
            IsSet = true;
            Value = value;
        }

        /// <summary>
        /// Implicitly converts this option to the contained type
        /// </summary>
        /// <param name="option"></param>
        public static implicit operator TType(Option<TType> option) => option.Value;

        /// <summary>
        /// Implicitly converts the provided value to an Option
        /// </summary>
        /// <param name="value"></param>
        public static implicit operator Option<TType>(TType value) => new Option<TType>(value);
    }
}